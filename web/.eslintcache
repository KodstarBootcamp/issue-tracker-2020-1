[{"/home/ufuk/issue-tracker-2020-1/web/src/pages/Home.js":"1","/home/ufuk/issue-tracker-2020-1/web/src/components/DisplayIssues.js":"2","/home/ufuk/issue-tracker-2020-1/web/src/pages/EditIssue.js":"3","/home/ufuk/issue-tracker-2020-1/web/src/pages/CreateIssue.js":"4"},{"size":481,"mtime":1608888451727,"results":"5","hashOfConfig":"6"},{"size":1436,"mtime":1608892571216,"results":"7","hashOfConfig":"6"},{"size":3820,"mtime":1608907903002,"results":"8","hashOfConfig":"6"},{"size":3261,"mtime":1608891883231,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"3y1es",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ufuk/issue-tracker-2020-1/web/src/pages/Home.js",[],["19","20"],"/home/ufuk/issue-tracker-2020-1/web/src/components/DisplayIssues.js",[],"/home/ufuk/issue-tracker-2020-1/web/src/pages/EditIssue.js",["21","22","23"],"/home/ufuk/issue-tracker-2020-1/web/src/pages/CreateIssue.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":25,"column":13,"nodeType":"30","endLine":38,"endColumn":4},{"ruleId":"28","severity":1,"message":"31","line":38,"column":6,"nodeType":"32","endLine":38,"endColumn":8,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":85,"column":9,"nodeType":"36","messageId":"37","endLine":85,"endColumn":24},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'id' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["40"],"no-unused-vars","'addLabelHandler' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"41","fix":"42"},"Update the dependencies array to be: [id, options]",{"range":"43","text":"44"},[1110,1112],"[id, options]"]